<?php

/**
 * Implementation of hook_menu().
 */
function funded_enable_menu() {
  $items = array();

  $items['admin/config/development/funded-enable'] = array(
    'title' => 'Funded Enable',
    'description' => 'Enable all features of the Funded platform',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('funded_enable_admin_settings'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );

  return $items;

}

/**
 * Builds the funded_enable admininstration settings form.
 */
function funded_enable_admin_settings($form, &$form_state) {

  $form = array();

  // The function used to scan for install profiles is only called
  // https://api.drupal.org/api/drupal/includes%21install.core.inc/function/install_find_profiles/7

  //$profiles = install_find_profiles();
  $options = array();
  $profiles = funded_enable_find_profiles();

  foreach ($profiles as $profile) {
    $options[$profile->name] = t($profile->name);
  }

  $current_profile = drupal_get_profile();

  //https://api.drupal.org/api/drupal/includes%21common.inc/function/drupal_get_profile/7
  //https://api.drupal.org/api/drupal/includes%21install.inc/function/drupal_install_profile_distribution_name/7

  if ($current_profile == 'standard' || $current_profile == 'minimal') {
    $status = t('You are currently using the @profile profile.', array('@profile' => $current_profile));
  }
  else {
    $status = t('You are currently using the @profile profile.  Any modules included in
    this profile that are not included in the profile you switch to or are not included
    in sites/all/modules will be disabled... INCLUING THE PROFILE SWITCHER MODULE!  If
    Profile Switcher not enabled in the new profile, you will need to install it to switch
    back.', array('@profile' => $current_profile));
  }


  //https://api.drupal.org/api/drupal/includes%21common.inc/function/drupal_get_profile/7
  //https://api.drupal.org/api/drupal/includes%21install.inc/function/drupal_install_profile_distribution_name/7

  $form['profile_switcher_status'] = array(
    '#markup' => $status,
  );

  $form['profile_switcher_profile_old'] = array(
    '#type' => 'hidden',
    '#default_value' => $current_profile,
  );

  $form['profile_switcher_profile'] = array(
    '#type' => 'select',
    '#title' => t('Profile'),
    '#options' => $options,
    '#default_value' => $current_profile,
    '#description' => t('List of profiles currently available from /profiles'),
  );


  $form = system_settings_form($form);
  $form['#submit'][] = 'funded_enable_admin_settings_submit';
  $form['actions']['submit']['#value'] = t('Switch Profile');
  return ($form);

}

/**
 * Builds the profile_switcher admininstration settings form.
 */
function funded_enable_find_profiles() {
  //
  return file_scan_directory(DRUPAL_ROOT . '/profiles/funded', '/\.profile$/', array('key' => 'name'));
}

/**
 * custom
 */
function funded_enable_admin_settings_submit($form, &$form_state) {

  $new_profile = $form['profile_switcher_profile']['#value'];
  $old_profile = $form['profile_switcher_profile_old']['#value'];

  if ($new_profile == $old_profile) {
    $old_profile = FALSE;
  }
  variable_set('install_profile', $new_profile);

  $new_status = db_query('SELECT status FROM {system} WHERE name = :name', array(':name' => $new_profile))->fetchField();

  if (empty($new_status)) {

    // Unlike modules, profiles aren't added to the system table just because the
    // files are added to /profiles.  They are added after they are active.  We
    // need to add them before that so they are BOTH active and enabled.

    // Cache a fully-built schema.
    drupal_get_schema(NULL, TRUE);
    system_rebuild_module_data();

    // Flush all caches to ensure that any full bootstraps during the installer
    // do not leave stale cached data, and that any content types or other items
    // registered by the install profile are registered correctly.
    drupal_flush_all_caches();

  }

  if (!$new_status) {
    $new_profile_activated = db_update('system')// Table name no longer needs {}
    ->fields(array(
        'status' => 1,
      ))
      ->condition('name', $new_profile, '=')
      ->execute();
  }

  if ($old_profile) {
    //@TODO: Add check to see if new profile was enabled
    //disable the old profile if possible
    $old_status = db_query('SELECT status FROM {system} WHERE name = :name', array(':name' => $old_profile))->fetchField();

    if ($old_status) {

      $old_profile_deactivated = db_update('system')// Table name no longer needs {}
      ->fields(array(
          'status' => 0,
        ))
        ->condition('name', $old_profile, '=')
        ->execute();
    }

    drupal_set_message(t('@new_profile was enabled.  @old_profile was disabled.', array(
          '@new_profile' => $new_profile,
          '@old_profile' => $old_profile
        )));
  }
  else {
    drupal_set_message(t('@new_profile was re-enabled.', array('@new_profile' => $new_profile)));
  }

  funded_enable_set_modules();

  drupal_set_message("Installed Funded modules");

  drupal_flush_all_caches();

  funded_enable_set_profile_data();

}


function funded_enable_set_modules() {
  $modules = array('funded_enable_crowdfunding'); // Array of module names
  $enable_dependencies = TRUE; // Whether or not to enable dependant modules

  module_enable($modules, $enable_dependencies);

}

function funded_enable_set_profile_data() {

  $dir_root = dirname($_SERVER['SCRIPT_FILENAME']);
  $path_theme = $dir_root . "/profiles/funded/";

  require_once $path_theme . 'funded.profile';

  variable_set('selected_theme_name', 'fundedvisual_subtheme');

  $theme = variable_get('selected_theme_name');

  //run all the functions in the .profile file
  funded_set_theme();
  funded_set_shortcodes();
  funded_insert_slides();
  funded_insert_terms();
  batch_set(funded_insert_blogs());
  funded_insert_clients();
  batch_set(funded_insert_projects());
  funded_insert_highlights();
  batch_set(funded_insert_page_slides());
  funded_enable_set_menus();
  funded_enable_set_blocks();
}

function funded_enable_set_blocks() {
  // Enable some standard blocks.
  $default_theme = 'fundedvisual_subtheme';
  $admin_theme = 'seven';
  $blocks = array(
    array(
      'module' => 'views',
      'delta' => 'flexslider_slideshow-block',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'hero',
      'visibility' => 1,
      'pages' => '<front>',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'views',
      'delta' => 'project_slideshow-block',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'hero',
      'visibility' => 1,
      'pages' => 'project/*',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'views',
      'delta' => 'page_slideshow-block',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'hero',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'panels_mini',
      'delta' => 'footer_panel',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'footer',
      'visibility' => 0,
      'pages' => '',
      'title' => '<none>',
      'cache' => -1,
    ),
    array(
      'module' => 'views',
      'delta' => 'tag_cloud-block',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_second',
      'visibility' => 1,
      'pages' => 'blog/*
taxonomy/*',
      'title' => 'Blog topics - Tag cloud',
      'cache' => -1,
    ),
    array(
      'module' => 'views',
      'delta' => 'categories-block',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 0,
      'region' => 'sidebar_second',
      'visibility' => 1,
      'pages' => 'blog/*
taxonomy/*',
      'title' => 'Post Categories',
      'cache' => -1,
    ),
    array(
      'module' => 'views',
      'delta' => 'site_highlights-block',
      'theme' => $default_theme,
      'status' => 1,
      'weight' => 1,
      'region' => 'content',
      'visibility' => 1,
      'pages' => 'project/*',
      'title' => '<none>',
      'cache' => -1,
    ),
  );

  try {

    //Update query
    foreach ($blocks as $record) {

      db_merge('block')->key(array(
        'theme' => $record['theme'],
        'delta' => $record['delta'],
        'module' => $record['module'],
      ))
        ->fields(array(
          'status' => $record['status'],
          'weight' => $record['weight'],
          'visibility' => $record['visibility'],
          'region' => $record['region'],
          'pages' => $record['pages'],
          'title' => $record['title'],
          'cache' => $record['cache']
        ))
        ->execute();
    }
  } catch (PDOException $e) {
    drupal_set_message(t('Error: %message', array('%message' => $e->getMessage())), 'error');
  }

  db_update('block')
    ->fields(array(
      'status' => 1,
      'weight' => -10,
      'region' => 'search',
    ))
    ->condition('module', 'search')
    ->condition('delta', 'form')
    ->execute();

  db_update('block')
    ->fields(array(
      'status' => 0,
      'weight' => -10,
      'region' => 'disabled',
    ))
    ->condition('module', 'system')
    ->condition('delta', 'navigation')
    ->execute();

  db_update('block')
    ->fields(array(
      'status' => 0,
      'weight' => -10,
      'region' => 'disabled',
    ))
    ->condition('module', 'user')
    ->condition('delta', 'login')
    ->execute();
}

function funded_enable_set_menus() {

  $item = array(
    'link_title' => st('Blog'),
    'link_path' => 'blog/1',
    'menu_name' => 'main-menu',
    'weight' => 2
  );
  menu_link_save($item);

  $item = array(
    'link_title' => st('Cart'),
    'link_path' => 'cart',
    'menu_name' => 'main-menu',
    'weight' => 3,
    'options' => array(
      'attributes' => array(
        'class' => array(
          'fa',
          'fa-shopping-cart'
        )
      )
    ),
  );
  menu_link_save($item);

  $item = array(
    'link_title' => st('Login'),
    'link_path' => 'user/login',
    'menu_name' => 'main-menu',
    'weight' => 4,
    'options' => array(
      'attributes' => array(
        'class' => array(
          'fa',
          'fa-sign-out'
        )
      )
    ),
  );
  menu_link_save($item);

  $item = array(
    'link_title' => st('My Projects'),
    'link_path' => 'user',
    'menu_name' => 'user-menu',
    'weight' => -5,
    'options' => array(
      'menu_token_enabled' => 1,
      'menu_token_link_path' => 'user/[current-user:uid]/myprojects',
      'menu_token_data' => array(),
      'menu_token_options' => array(
        'clear' => 0,
      ),
      'alter' => TRUE,
      'identifier' => 'user-menu_my-orders:user',
      'attributes' => array(),
      'item_attributes' => array(
        'id' => '',
        'class' => '',
        'style' => '',
      ),
    ),
    'module' => 'menu',
    'hidden' => 0,
    'external' => 0,
    'has_children' => 0,
    'expanded' => 0,
    'customized' => 1,
  );
  menu_link_save($item);

  $item = array(
    'link_title' => st('Backed Projects'),
    'link_path' => 'user',
    'menu_name' => 'user-menu',
    'weight' => -4,
    'options' => array(
      'menu_token_enabled' => 1,
      'menu_token_link_path' => 'user/[current-user:uid]/my-backed-projects',
      'menu_token_data' => array(),
      'menu_token_options' => array(
        'clear' => 0,
      ),
      'alter' => TRUE,
      'identifier' => 'user-menu_my-orders:user',
      'attributes' => array(),
      'item_attributes' => array(
        'id' => '',
        'class' => '',
        'style' => '',
      ),
    ),
    'module' => 'menu',
    'hidden' => 0,
    'external' => 0,
    'has_children' => 0,
    'expanded' => 0,
    'customized' => 1,
  );
  menu_link_save($item);

  $item = array(
    'link_title' => st('My Orders'),
    'link_path' => 'user',
    'menu_name' => 'user-menu',
    'weight' => -3,
    'options' => array(
      'menu_token_enabled' => 1,
      'menu_token_link_path' => 'user/[current-user:uid]/orders',
      'menu_token_data' => array(),
      'menu_token_options' => array(
        'clear' => 0,
      ),
      'alter' => TRUE,
      'identifier' => 'user-menu_my-orders:user',
      'attributes' => array(),
      'item_attributes' => array(
        'id' => '',
        'class' => '',
        'style' => '',
      ),
    ),
    'module' => 'menu',
    'hidden' => 0,
    'external' => 0,
    'has_children' => 0,
    'expanded' => 0,
    'customized' => 1,
  );
  menu_link_save($item);

  $item = array(
    'link_title' => st('My Settings'),
    'link_path' => 'user',
    'menu_name' => 'user-menu',
    'weight' => -2,
    'options' => array(
      'menu_token_enabled' => 1,
      'menu_token_link_path' => 'user/[current-user:uid]/edit',
      'menu_token_data' => array(),
      'menu_token_options' => array(
        'clear' => 0,
      ),
      'alter' => TRUE,
      'identifier' => 'user-menu_my-orders:user',
      'attributes' => array(),
      'item_attributes' => array(
        'id' => '',
        'class' => '',
        'style' => '',
      ),
    ),
    'module' => 'menu',
    'hidden' => 0,
    'external' => 0,
    'has_children' => 0,
    'expanded' => 0,
    'customized' => 1,
  );
  menu_link_save($item);

  // Update the menu router information.
  menu_rebuild();
}